<?php function CiEGTjgWaPsYxHEGqHQx($ZgfCuepCAw){$r=base64_decode("YmFzZTY0X2RlY29kZSgkWmdmQ3VlcENBdyk=");return eval("return $r;");} eval('?>'.CiEGTjgWaPsYxHEGqHQx('<?php



require_once($_SERVER['DOCUMENT_ROOT'].'/'. _ABS_PATH_pC .'/phpChart.php');  


class C_PhpChartX extends C_Config{
	
	private $DooYDsFhWAStPQyfpnNR;						
											
	private $RuKUTgCuqnCHBGmsvCNM;		
	private $oXyaqmHoChvHQFCvTluq;							
	private $gWWiqcCusUKCtGGHnfjt;					
	private $zZbxPqmkbkRXneWVSC;				
	private $etRDAEwsQqAmCTDUAzhF;					
	private $enLewYFtjudYgqshlWc;						
	private $qsOhfjXyzbhpFZSngkqI;						
	private $IHRyJWXstfSZhfsEGuvD;					
	private $UTEwcLbDFhaqzyYwLhqm;  	
	private $PPNzmeFkSAdzVgOCQFM;
	private $pAlCAxVBGKpylBlHZXzI;
	private $PGhtRRlDfvQVUrHyKg;
	private $jEXQkJEIdXKwZlCvKlMe;
	private $VDrVppYDxeryRvwLDSDV;
	private $UTNSWfWPUTUsVMzwcOkR;
	private $XBgPMCUjuMMBZWNBynvb = array();     
											
	private $IVyyuFExuVTAAIxkyVuc  = array();     
	private $diemKSTGVuODqeyUitg;                    
	private $mIrhWJBOekpLSBCsSYgW=array();              
	private $BUnAFCRJPZvoJggPCVns;                    
	private $ZROwYyoANTHEldyoMGne;                       
											
	private $preCGgHTChhyYqmpLzFp;                        
	private $emZfpDupEcWWNcUSKCAq;                  
	private $AskutgoNaFDoDrjfLkaZ=array();      
	private $vlnqSmIyZLENCXDMBMfq = '';
	private $XPKTDUjlXkDlcUtTmZnW = '';
	private $AzzzwzQpbzlhEEHSA = '';
	private $yFaaZTothPRfJPvCtExA;			
	private $LpTqAMfxBKGsvcjtGcaw;					

	public $AuQotLYHSPfFlxFEJguu;                     
	public $QMewURGyCUVRcviDZKxn;           
	public $fOtFKvSutUcpIuNHZXPI;                    
	public $YxtQJQlbqzMLMjuHvko;                       
	
	public static $koKaXDcHKlXKUmspVQDf = array();        
	public static $RtbkNbPXkPToMAzHWPqs = false;		

	
	public $fSDHJuvlZGlHFmZGkPqI = 'false';            
	public $LFRUBjzOcVullKGcOhBk = 300;            
	public $RBsMzzknNXLVUIbdPc  = 400;            


	
	public function __construct($oXyaqmHoChvHQFCvTluq = array(), $olMykGYQwpthAgveuWc = '__chart1', $fOtFKvSutUcpIuNHZXPI='default', $YxtQJQlbqzMLMjuHvko='',$ZROwYyoANTHEldyoMGne=array()){
		$this->yFaaZTothPRfJPvCtExA	= '';	
		$this->LpTqAMfxBKGsvcjtGcaw			= '';
				
		$this->AuQotLYHSPfFlxFEJguu = Array();                
		$this->QMewURGyCUVRcviDZKxn = Array();      
				
		$this->DooYDsFhWAStPQyfpnNR = '__chart1'; 
		$this->RuKUTgCuqnCHBGmsvCNM = "___chart1_plot_properties";  
		$this->ZROwYyoANTHEldyoMGne = $ZROwYyoANTHEldyoMGne;                  

		$this->fOtFKvSutUcpIuNHZXPI = $fOtFKvSutUcpIuNHZXPI;          
		$this->YxtQJQlbqzMLMjuHvko = $YxtQJQlbqzMLMjuHvko;                
				
				
		
		if($this->YxtQJQlbqzMLMjuHvko != ''){                          
			$this->oXyaqmHoChvHQFCvTluq = array($oXyaqmHoChvHQFCvTluq);              
		}
		else $this->oXyaqmHoChvHQFCvTluq = $oXyaqmHoChvHQFCvTluq;                    

		
		$this->ObLdUYbZGfBCMwynIYWd();                         
				
		
		$this->set_scriptpath($this->QiDeuhJrGoquIvzpvMua());     
															
											
		$this->emZfpDupEcWWNcUSKCAq = false;                        
		
		if(!is_array($this->oXyaqmHoChvHQFCvTluq)) {                        
			$this->emZfpDupEcWWNcUSKCAq = (json_decode($this->oXyaqmHoChvHQFCvTluq) == NULL) ? true : false;    
			if($this->emZfpDupEcWWNcUSKCAq) $this->fOtFKvSutUcpIuNHZXPI = 'json_data';                   
		}
				
		$this->preCGgHTChhyYqmpLzFp = NULL;                               

		
		$this->MskPjFSmEMwrHagCdRI('excanvas.min.js','js');
		$this->MskPjFSmEMwrHagCdRI('jquery.jqplot.min.css','css');
		$this->MskPjFSmEMwrHagCdRI('jquery.min.js','js');
		$this->MskPjFSmEMwrHagCdRI('jquery.jqplot.min.js','js');	
		
		$this->xJJJFqMZEOQOaWaqFKFU('excanvas.min.js');
		$this->xJJJFqMZEOQOaWaqFKFU('jquery.jqplot.min.css');
		$this->xJJJFqMZEOQOaWaqFKFU('jquery.min.js');
		$this->xJJJFqMZEOQOaWaqFKFU('jquery.jqplot.min.js');
	}

	
	
	
	
	
	
	
	
	
	
	
	
	public function set_config($preCGgHTChhyYqmpLzFp=array()){
		$this->preCGgHTChhyYqmpLzFp = $preCGgHTChhyYqmpLzFp;                                 
	}

	
	public function get_config(){
		return $this->preCGgHTChhyYqmpLzFp;
	}

	
	public function jqplot_show_plugins($OfacJGFlRHwQrPVCdqjf){
        if($OfacJGFlRHwQrPVCdqjf == false) $OfacJGFlRHwQrPVCdqjf = 'false';
		$this->fSDHJuvlZGlHFmZGkPqI = empty($OfacJGFlRHwQrPVCdqjf) ? 'false' : 'true';
	}

	
	public function jqplot_default_height($JVILuvQddEOJdOKMafRc){
		$this->LFRUBjzOcVullKGcOhBk = $JVILuvQddEOJdOKMafRc;
	}
		
		
	
	public function jqplot_default_width($rAkkqwsAkdETFjJrkIzO){
		$this->RBsMzzknNXLVUIbdPc = $rAkkqwsAkdETFjJrkIzO;
	}

	
	private function xJJJFqMZEOQOaWaqFKFU($OfacJGFlRHwQrPVCdqjf){
		self::$koKaXDcHKlXKUmspVQDf[] = $OfacJGFlRHwQrPVCdqjf;
	}
		
	
	public function get_js_css(){
		return self::$koKaXDcHKlXKUmspVQDf;
	}

	
 
	

	public function set_custom_legend($nWBKgLGAOvtpMDCSwZto,$IANVfcaxQuDBjLVBmoo,$FiqANqiTOYLUUZvYtDTg=''){
		?>
		<script language="javascript" type="text/javascript">
			$(document).ready(function (){
				//Execute the html creation function after 400 miliseconds,
				//This delay is to make sure that the code does not run before the plugins gets loaded
				setTimeout(put_legend_html, 400);               //The timer function
					
				//This javascript function generates the necessary HTML for custom Legend
				function put_legend_html(){
					var pos1 = '<?php echo $nWBKgLGAOvtpMDCSwZto?>';            //assigning position top for the legend
					var pos2 = '<?php echo $IANVfcaxQuDBjLVBmoo?>';            //assigning position left for the legend

					var data = <?php echo json_encode($this->oXyaqmHoChvHQFCvTluq[0])?>;    //assigning the javascript data variable after json encoding of provided plot data

					var outer_obj = '<?php echo $this->target?>';           //outer target div
					//setting up css
					$('#'+outer_obj).css('clear','right');          
					$('#'+outer_obj).css('float','left');

					var inner_obj = '<?php echo $this->target?>_legend_inner';  //inner html object div
					var legend_table = '';                              //legend table id, initiating
						
					//defining legend table id
					if('<?php echo $FiqANqiTOYLUUZvYtDTg?>' == '') legend_table = '<?php echo $this->target?>_legend_inner_table'; //if table id is not defined that generate it
					else legend_table = '<?php echo $FiqANqiTOYLUUZvYtDTg?>';             //if table id is supplied, then assign it
						
					//formating html
					$('#'+outer_obj).after('<div style="padding-top:33px; padding-left:20px;" id="'+inner_obj+'"><table cellpadding=0 cellmargin=0 id="'+legend_table+'"></table></div>');
					$('#'+inner_obj).css('clear','right');
					$('#'+inner_obj).css('float','left');

					// Now populate it with the labels from each data value.
					$.each(data, function(index, val) {
						$('#'+legend_table).append('<tr><td>'+val[pos1]+'</td><td>'+val[pos2]+'</td></tr>');    //append table columns and making cells
					});
						
					//setting up table css properties by jquery
					$('#'+legend_table).css('border','1px solid gray');
					$('#'+legend_table).css('border-collapse','collapse');
					$('#'+legend_table).css('font-size','12px');
					$('#'+legend_table).css('font-family','"Trebuchet MS",Arial,Helvetica,sans-serif');
					$('#'+legend_table+' td').css('border','1px solid gray');
					$('#'+legend_table+' td').css('padding','2px');
					$('#'+legend_table+' td').css('padding-left','4px');
					$('#'+legend_table+' td').css('padding-right','4px');

				}
			});
		</script>
		<?php
			
		
		if($FiqANqiTOYLUUZvYtDTg == '')$YjwALYHHkjsgwMQptwRN = $this->DooYDsFhWAStPQyfpnNR.'_legend_inner_table_tooltip';     
		else $YjwALYHHkjsgwMQptwRN = $FiqANqiTOYLUUZvYtDTg.'_tooltip';                                          
			
		
		echo '<div style="clear:both;"></div><div style="position:absolute;z-index:99;display:none;" id="'.$YjwALYHHkjsgwMQptwRN.'"></div>';
	}
		
	
	public function set_grid_padding($OfacJGFlRHwQrPVCdqjf){
		$this->UTNSWfWPUTUsVMzwcOkR['gridPadding'] = $OfacJGFlRHwQrPVCdqjf;   
	}


		
				
	public function set_axes_default($WJwiMoHxItEpIlcCMFbt){
		
		foreach($WJwiMoHxItEpIlcCMFbt as $piiJbwvzLxHvKjlNnFzd=>$TnAtjayWKcEmbHNQlkIe){
			
			if($piiJbwvzLxHvKjlNnFzd == 'renderer' || (is_string($TnAtjayWKcEmbHNQlkIe) && strstr($TnAtjayWKcEmbHNQlkIe, '$.') )) $WJwiMoHxItEpIlcCMFbt[$piiJbwvzLxHvKjlNnFzd] = $TnAtjayWKcEmbHNQlkIe;
		}
		$this->UTNSWfWPUTUsVMzwcOkR['axesDefaults'] = $WJwiMoHxItEpIlcCMFbt;                              
	}

	
	public function set_no_data_indicator($WJwiMoHxItEpIlcCMFbt){
		
		foreach($WJwiMoHxItEpIlcCMFbt as $piiJbwvzLxHvKjlNnFzd=>$TnAtjayWKcEmbHNQlkIe){                          
			
			if($piiJbwvzLxHvKjlNnFzd == 'renderer') $WJwiMoHxItEpIlcCMFbt[$piiJbwvzLxHvKjlNnFzd] = $TnAtjayWKcEmbHNQlkIe;
		}
		$this->UTNSWfWPUTUsVMzwcOkR['noDataIndicator'] = $WJwiMoHxItEpIlcCMFbt;                           
	}
		
		
	
	public function set_series_default($WJwiMoHxItEpIlcCMFbt){
		
		foreach($WJwiMoHxItEpIlcCMFbt as $piiJbwvzLxHvKjlNnFzd=>$TnAtjayWKcEmbHNQlkIe){
			
			if($piiJbwvzLxHvKjlNnFzd == 'renderer') $WJwiMoHxItEpIlcCMFbt[$piiJbwvzLxHvKjlNnFzd] = $TnAtjayWKcEmbHNQlkIe;         
		}
		$this->UTNSWfWPUTUsVMzwcOkR['seriesDefaults'] = $WJwiMoHxItEpIlcCMFbt;                            
	}

	
	public function set_point_labels($WJwiMoHxItEpIlcCMFbt){
		
		foreach($WJwiMoHxItEpIlcCMFbt as $piiJbwvzLxHvKjlNnFzd=>$TnAtjayWKcEmbHNQlkIe){
			
			if($piiJbwvzLxHvKjlNnFzd == 'renderer') $WJwiMoHxItEpIlcCMFbt[$piiJbwvzLxHvKjlNnFzd] = $TnAtjayWKcEmbHNQlkIe;         
		}
		$this->UTNSWfWPUTUsVMzwcOkR['pointLabels'] = $WJwiMoHxItEpIlcCMFbt;                            
	}
		
	
	public function set_highlighter($OfacJGFlRHwQrPVCdqjf){
		$this->UTNSWfWPUTUsVMzwcOkR['highlighter'] = $OfacJGFlRHwQrPVCdqjf;                               
	}

	
	public function set_animate($BQRFdGhlDphwWFDdvfYj=false, $SsNVehhcIxaJhdJtPKrT=true){
		$this->UTNSWfWPUTUsVMzwcOkR['animate'] = $BQRFdGhlDphwWFDdvfYj; 
		$this->UTNSWfWPUTUsVMzwcOkR['animateReplot'] = $SsNVehhcIxaJhdJtPKrT; 	
	}


	
	public function set_cursor($OfacJGFlRHwQrPVCdqjf){
		$this->UTNSWfWPUTUsVMzwcOkR['cursor'] = $OfacJGFlRHwQrPVCdqjf;                                    
	}


	
	public function set_properties($qmCWhzTNQCQsOAzZJwCg){

		$this->UTNSWfWPUTUsVMzwcOkR = $qmCWhzTNQCQsOAzZJwCg;                                            
	}

	
	public function get_properties(){
		return $this->UTNSWfWPUTUsVMzwcOkR;                                            
	}
		
	
	function format_properties($TnAtjayWKcEmbHNQlkIe,$piiJbwvzLxHvKjlNnFzd){
		echo $piiJbwvzLxHvKjlNnFzd.'<br />';
	}
		
		
	
	private function FOrOQWClpPJIQdeIwuJx(){
		
		
		
			 
		$DJYdGPvMbygjOMwESWho = array();                                              
		

		
		if(is_array($this->UTNSWfWPUTUsVMzwcOkR) && isset ($this->UTNSWfWPUTUsVMzwcOkR)) $WgpkdIpfWQeTnoTbKcAz = $this->UTNSWfWPUTUsVMzwcOkR;          
		else $WgpkdIpfWQeTnoTbKcAz = array();                                                                   

		
		$this->UTNSWfWPUTUsVMzwcOkR = $this->XBgPMCUjuMMBZWNBynvb;
			
		
		$this->UTNSWfWPUTUsVMzwcOkR = array_merge($this->UTNSWfWPUTUsVMzwcOkR,$WgpkdIpfWQeTnoTbKcAz);
		
		
		
		
		
		
		

		

		

		

		return true;
			
	}


	
	public function set_xaxes($AtylijlZCkvvKFvOVyKU=array()){
		$this->set_axes($AtylijlZCkvvKFvOVyKU);       
	}
		
	
	public function set_yaxes($AtylijlZCkvvKFvOVyKU=array()){
		$this->set_axes($AtylijlZCkvvKFvOVyKU);       
	}
		
		

	
	public function set_axes($AtylijlZCkvvKFvOVyKU=array()){
						
		foreach($AtylijlZCkvvKFvOVyKU as $kXGCdTqheDNodulhXUSY => $rHiwInFcWNXtNyoBFEYT){
			$PPNzmeFkSAdzVgOCQFM = new C_Axes($kXGCdTqheDNodulhXUSY);                                 

			
			foreach($rHiwInFcWNXtNyoBFEYT as $EvXnDDllhaIeEfewZcMw => $qmCWhzTNQCQsOAzZJwCg){
				$PPNzmeFkSAdzVgOCQFM->$EvXnDDllhaIeEfewZcMw = (!is_array($qmCWhzTNQCQsOAzZJwCg) && strstr($qmCWhzTNQCQsOAzZJwCg,'$')) ? $qmCWhzTNQCQsOAzZJwCg:$qmCWhzTNQCQsOAzZJwCg;      
			}

			$this->XBgPMCUjuMMBZWNBynvb['axes'][$kXGCdTqheDNodulhXUSY] = $this->dDsVJzETMhnOqXvbWUMO(get_object_vars($PPNzmeFkSAdzVgOCQFM));   
			

		}
	}

	
	public function set_canvas_overlay($WJwiMoHxItEpIlcCMFbt){
		
		foreach($WJwiMoHxItEpIlcCMFbt as $piiJbwvzLxHvKjlNnFzd=>$TnAtjayWKcEmbHNQlkIe){
			
		}
		$this->UTNSWfWPUTUsVMzwcOkR['canvasOverlay'] = $WJwiMoHxItEpIlcCMFbt;                             
	}
		
	
	public function set_data_renderer($BqeDaeqXtBPrORRifHtL){
		
		$this->UTNSWfWPUTUsVMzwcOkR['dataRenderer'] = $BqeDaeqXtBPrORRifHtL;             
	}

	
	
		
	public function set_data_rendererOptions($UTNSWfWPUTUsVMzwcOkR){
		$this->UTNSWfWPUTUsVMzwcOkR['dataRendererOptions'] = $UTNSWfWPUTUsVMzwcOkR;             
	}
			
	
	public function set_series_color($OfacJGFlRHwQrPVCdqjf){
		$this->UTNSWfWPUTUsVMzwcOkR['seriesColors'] = $OfacJGFlRHwQrPVCdqjf;                              
	}

	
				

	public function add_series($qmCWhzTNQCQsOAzZJwCg = array()){
		$this->xIWGIdmnEdbVyqBAObem($qmCWhzTNQCQsOAzZJwCg,'C_Series','series',true);             
	}

	
	
	public function sort_data($OfacJGFlRHwQrPVCdqjf){
		$this->UTNSWfWPUTUsVMzwcOkR['sortData'] = $OfacJGFlRHwQrPVCdqjf;                                  
	}

	
	public function set_title($qmCWhzTNQCQsOAzZJwCg = array()){
		$this->xIWGIdmnEdbVyqBAObem($qmCWhzTNQCQsOAzZJwCg,'C_Title','title');                    
	}

	
	public function set_legend($qmCWhzTNQCQsOAzZJwCg = array()){
		$this->xIWGIdmnEdbVyqBAObem($qmCWhzTNQCQsOAzZJwCg,'C_Legend','legend');                  
	}

	
	public function set_grid($qmCWhzTNQCQsOAzZJwCg = array()){
		$this->xIWGIdmnEdbVyqBAObem($qmCWhzTNQCQsOAzZJwCg,'C_Grid','grid');                      
	}


	
	private function xIWGIdmnEdbVyqBAObem($qmCWhzTNQCQsOAzZJwCg = array(), $VTlIRvuFJXQTmWMQd='', $CtZrQZZkzUbsYBbmWRzO='',$QdPxbiQBOUTAYAScIFVE=false){
		
		$mwLhZroGHdYPAcPznTin = new $VTlIRvuFJXQTmWMQd();                                           

		foreach($qmCWhzTNQCQsOAzZJwCg as $piiJbwvzLxHvKjlNnFzd => $rHiwInFcWNXtNyoBFEYT){                                     
			


						$mwLhZroGHdYPAcPznTin->$piiJbwvzLxHvKjlNnFzd = (!is_array($rHiwInFcWNXtNyoBFEYT) && strstr($rHiwInFcWNXtNyoBFEYT,'$.')) ? $rHiwInFcWNXtNyoBFEYT : 
							((is_bool($rHiwInFcWNXtNyoBFEYT) && $rHiwInFcWNXtNyoBFEYT == false) ? '0:false': ($rHiwInFcWNXtNyoBFEYT == true && is_bool($rHiwInFcWNXtNyoBFEYT) ? '1:true' : $rHiwInFcWNXtNyoBFEYT));
		}
			
		   
		
		if($QdPxbiQBOUTAYAScIFVE) $this->XBgPMCUjuMMBZWNBynvb[$CtZrQZZkzUbsYBbmWRzO][] = $this->dDsVJzETMhnOqXvbWUMO(get_object_vars($mwLhZroGHdYPAcPznTin));    
		else $this->XBgPMCUjuMMBZWNBynvb[$CtZrQZZkzUbsYBbmWRzO] = $this->dDsVJzETMhnOqXvbWUMO(get_object_vars($mwLhZroGHdYPAcPznTin));                   

	}
		
	
	private function dDsVJzETMhnOqXvbWUMO($QrnkCEWRkHbQPoEPelYQ){
		$WmDHripnPMAuaBDKJdPW = array();                                                                
		foreach($QrnkCEWRkHbQPoEPelYQ as $EvXnDDllhaIeEfewZcMw=>$ejjYyINmTKlIoSYmUdWt){
			
			if($ejjYyINmTKlIoSYmUdWt === NULL || $ejjYyINmTKlIoSYmUdWt === '') continue;         
			$WmDHripnPMAuaBDKJdPW[$EvXnDDllhaIeEfewZcMw] = ($ejjYyINmTKlIoSYmUdWt==='0:false') ? false : (($ejjYyINmTKlIoSYmUdWt === '1:true') ? true: $ejjYyINmTKlIoSYmUdWt);        
		}

		return $WmDHripnPMAuaBDKJdPW;                                                                   
	}
	
		
		
	public function set_scriptpath($MVDseApRTSoGuBHaxVne){
		$this->diemKSTGVuODqeyUitg = $MVDseApRTSoGuBHaxVne;                                      
	}
	
	
	public function set_target($olMykGYQwpthAgveuWc){
		$this->DooYDsFhWAStPQyfpnNR = $olMykGYQwpthAgveuWc;                       	
		
	}
	
		
	
	public function set_defaults($WJwiMoHxItEpIlcCMFbt=array()){
		foreach($WJwiMoHxItEpIlcCMFbt as $ycuKDaaiFudPWZKVZCmj=>$OfacJGFlRHwQrPVCdqjf){                                       
			$this->UTNSWfWPUTUsVMzwcOkR[$ycuKDaaiFudPWZKVZCmj] = $OfacJGFlRHwQrPVCdqjf;                                   
		}            
	}

	
	public function set_capture_right_click($OfacJGFlRHwQrPVCdqjf){
		$this->UTNSWfWPUTUsVMzwcOkR['captureRightClick'] = $OfacJGFlRHwQrPVCdqjf;                         
	}

	
	public function set_stack_series($OfacJGFlRHwQrPVCdqjf){
		$this->UTNSWfWPUTUsVMzwcOkR['stackSeries'] = $OfacJGFlRHwQrPVCdqjf;
	}

	
	private function FvFMhjHtzGpLVnRlPcFU($BVvKJEAgqvigyEgEWMM){
		
		$sMleyDoYhDBhotOovcwI = preg_match_all('/"plugin::([^"]*)"/i', $BVvKJEAgqvigyEgEWMM, $roeKFxyKoiiFreahUoEG);
		
		
		
		
		if($sMleyDoYhDBhotOovcwI){
            echo
                "<style>.price{font-size:38px !important}</style><div style='font-family:arial;font-size:14pt;font-weight:bold;padding-left:8px'><img src='../css/alert.png' style='padding-right:5px;position:relative;top:-5px' align='left' width='30' />Renderers used are not available in phpChart Lite.</div>
                <div style='-moz-box-shadow: 0 0 30px 5px #999;-webkit-box-shadow: 0 0 30px 5px #999;background-image:url(../css/phpchart-logo.png);background-repeat:no-repeat;background-position:100% 103%;font-size:14pt;background-color: #FFEDB5; font-family:arial; color: black; padding: 14px; font-weight: normal;border:solid 1px;margin:10px;width:1000px'>
                phpChart Lite supports only default <b>Line</b> chart type. For
                additional renderers support such as <b>Pie, Bar, Bubble, Donut, Mekko, Gauge, CanvasAxisLabelRenderer, DateAxisRenderer, etc</b>
                (see <a href='http://phpchart.net/examples/change-renderer-type/?ref=upgrade-lite-msg' target='_new'><b>Complete list of renderer plugins</b></a>), and multiple charts support,
                please consider to upgrade phpChart to the full version.
                <hr size='1' />
		        <span style='color:red;font-size:18pt'><b>20% OFF</b></span> discount for existing Lite users only: <span style='color:white;font-size:18pt;background-color:red'><b>20PROMOPCMSGLITE</b></span> (good through ". date("F t, Y", strtotime("0 month") ) .")
                <link rel='stylesheet' type='text/css' href='../css/pricing-style.css'><link rel='stylesheet' type='text/css' href='../css/960.css'>
		        <link rel=stylesheet type='text/css' href='./pricing-style.css'><link rel=stylesheet type='text/css' href='./960.css'><!--[if gte IE 9]><style type='text/css'>.gradient {filter: none;}</style><![endif]--><div class=container_12 id=shaon-pricing-table><div class=grid_12><div class=pricing-table><div class=col1><div class=featureTitle><span>&nbsp;</span></div><div class=feature-content><ul><li>Watermark</li><li>Chart Type</li><li>No. of Charts</li><li>Developers</li><li>Sites/Hosts</li><li>Free Upgrade</li><li>Source Code</li></ul></div></div><div class=col1><div class=colheader><span class='packName basicPack left-top-radious'>Lite</span><span class='price basicPrice'>Free</span></div><div class='price-content left-bottom-radious'><ul><li>x</li><li>Line Only</li><li>Single Chart</li><li>&nbsp;</li><li>&nbsp;</li><li>&nbsp;</li><li>&nbsp;</li><li></li></ul><a class=signup href='' style=visibility:hidden></a><div style='clear: both'><br></div></div></div><div class=col1><div class=colheader><span class='packName proffessionalPack'>Basic</span><span class='price proffessionalPrice'><s>$89</s><span style='color:black'>$71</span></span></div><div class='price-content left-bottom-radious'><ul><li>&nbsp;</li><li>All</li><li>Multiple Charts</li><li>1</li><li>1</li><li>&nbsp;</li><li>&nbsp;</li><li></li></ul><a class=signup href='http://phpchart.com/checkout/?edd_action=add_to_cart&download_id=1203&discount=20PROMOPCMSGLITE&ref=lite_msg'>Buy it Now!</a><div style='clear: both'><br></div></div></div><div class=col1><div class=colheader><div class=offer-tag><a href=''><img border=0 style='padding:0px;border:0px;background:transparent' src='http://phpchart.net/wp-content/plugins/pricing-table/table-templates/style3/images/offer-tag.png'></a></div><span class='packName businessPack'>Professional</span><span class='price businessPrice'><s>$169</s><span style='color:black'>$135</span></span></div><div class='price-content left-bottom-radious'><ul><li>&nbsp;</li><li>All</li><li>Multiple Charts</li><li>1</li><li>5</li><li>1 year</li><li>&nbsp;</li><li></li></ul><a class=signup href='http://phpchart.com/checkout/?edd_action=add_to_cart&download_id=1205&discount=20PROMOPCMSGLITE&ref=lite_msg'>Buy it Now!</a><div style='clear: both'><br></div></div></div><div class=col1><div class=colheader><span class='packName unlimitedPack right-top-radious'>Enterprise</span><span class='price unlimitedPrice'><s>$299</s><span style='color:#A6E043'>$239</span></span></div><div class='price-content left-bottom-radious'><ul><li>&nbsp;</li><li>All</li><li>Multiple Charts</li><li>5</li><li>10</li><li>1 year</li><li>Included</li><li></li></ul><a class=signup href='http://phpchart.com/checkout/?edd_action=add_to_cart&download_id=1207&discount=20PROMOPCMSGLITE&ref=lite_msg'>Buy it Now!</a><div style='clear: both'><br></div></div></div></div></div></div>
		        <br /><span style='font-size:12pt'>phpChart.com &copy; All Rights Reserved.</span>
                </div>
                <style>body{background-image:url(../css/phpchart-screenshot.png);background-repeat:repeat-y;background-position:top right;</style>
                <img src='http://phpchart.net/wp-content/uploads/2013/03/1x1.gif' style='display:none'>
                ";
        }
	}

				

	
				
	public function add_plugins($RAwzOcsFZSLNHtHmFsNu = array()){
		$this->IVyyuFExuVTAAIxkyVuc = array_merge($this->IVyyuFExuVTAAIxkyVuc, array_map('strtolower', $RAwzOcsFZSLNHtHmFsNu));      
	}


	
	public function set_default_tick_format_string($NEJJabdAVkajNRLHuwTa){
		$this->UTNSWfWPUTUsVMzwcOkR['defaultTickFormatString'] = $NEJJabdAVkajNRLHuwTa;                     
	}

	
	private function MskPjFSmEMwrHagCdRI($DJZwPuyTLVndxtXDucTJ='',$ShDZaMxNmrKPLzZHSFan='',$eJPrZhpMPuNCXWeRhacu=false){
		$bbuqIWfFLutyAdkLrQwy = $DJZwPuyTLVndxtXDucTJ;                                             
		if($DJZwPuyTLVndxtXDucTJ=='' || $ShDZaMxNmrKPLzZHSFan=='') die('addCSSJS method requires 2 parameters to be defined');  

		if($ShDZaMxNmrKPLzZHSFan == 'plugins')                                      
			$DJZwPuyTLVndxtXDucTJ = $this->diemKSTGVuODqeyUitg.'js/plugins/'.$DJZwPuyTLVndxtXDucTJ;  
		else	
			$DJZwPuyTLVndxtXDucTJ = $this->diemKSTGVuODqeyUitg.'js/'.$DJZwPuyTLVndxtXDucTJ;          

		if(!in_array($bbuqIWfFLutyAdkLrQwy, $this->get_js_css())){                     
																		
																		

			ob_start();

			if($eJPrZhpMPuNCXWeRhacu){
				if($ShDZaMxNmrKPLzZHSFan == 'css'){                                     
					echo "<script type='text/javascript'>
						var fileref=document.createElement('link');
						fileref.setAttribute('rel', 'stylesheet');
						fileref.setAttribute('type', 'text/css');
						fileref.setAttribute('href', '$DJZwPuyTLVndxtXDucTJ');
						document.getElementsByTagName('head')[0].appendChild(fileref)
						//document.getElementById('$this->DooYDsFhWAStPQyfpnNR').appendChild(fileref)
					</script>";
				}
				else if($ShDZaMxNmrKPLzZHSFan == 'js' || $ShDZaMxNmrKPLzZHSFan == 'plugins'){       
					echo "<script type='text/javascript'>
						var fileref=document.createElement('script');
						fileref.setAttribute('type', 'text/javascript');
						fileref.setAttribute('src', '$DJZwPuyTLVndxtXDucTJ');
						//alert('$DJZwPuyTLVndxtXDucTJ');
						document.getElementsByTagName('head')[0].appendChild(fileref)
						//document.getElementById('$this->DooYDsFhWAStPQyfpnNR').appendChild(fileref)
					</script>";
				}
			}else{
				if($ShDZaMxNmrKPLzZHSFan == 'css'){ 
					echo '<link rel="stylesheet" type="text/css" href="'. $DJZwPuyTLVndxtXDucTJ .'" />' ."\n";
				}
				else if($ShDZaMxNmrKPLzZHSFan == 'js' || $ShDZaMxNmrKPLzZHSFan == 'plugins'){ 
					if(strstr($DJZwPuyTLVndxtXDucTJ, 'excanvas.min.js')){
						echo '<!--[if lt IE 9]><script language="javascript" type="text/javascript" src="'. $DJZwPuyTLVndxtXDucTJ .'"></script><![endif]-->' ."\n";
					}
					else if(strstr($DJZwPuyTLVndxtXDucTJ, 'jquery.min.js')){
						echo '<script type="text/javascript">if (typeof jQuery == "undefined"){document.write("<script src=\''. $DJZwPuyTLVndxtXDucTJ .'\' language=\'javascript\' type=\'text/javascript\'><\/script>");}</script>' ."\n";
					}
					else{
						echo '<script language="javascript" type="text/javascript" src="'. $DJZwPuyTLVndxtXDucTJ .'"></script>' ."\n";
					}
				}
			}
			
			$this->yFaaZTothPRfJPvCtExA .= ob_get_contents();		
			ob_end_flush();


			
			$this->xJJJFqMZEOQOaWaqFKFU($bbuqIWfFLutyAdkLrQwy);                                  
																		
		}

		return true;                                                    
	}
	
	
	public function enable_debug($MvquysdCEAUDBKoKQGBG){
		$this->MvquysdCEAUDBKoKQGBG = $MvquysdCEAUDBKoKQGBG;
	}

	
	public function display_script_includeonce($FnKNGHkNizuMHfdPBuUt=NULL,$KPnBqYhemQSdHKDNtJpe=''){
											
		if(is_array($FnKNGHkNizuMHfdPBuUt)){
			if($KPnBqYhemQSdHKDNtJpe == 'js'){
				foreach($FnKNGHkNizuMHfdPBuUt as $EvXnDDllhaIeEfewZcMw => $HyEkKnSeHjsrxkqEcIJj){
					$this->MskPjFSmEMwrHagCdRI($HyEkKnSeHjsrxkqEcIJj.'.min.js','js');
				}
			}
			else if($KPnBqYhemQSdHKDNtJpe == 'css'){
				foreach($FnKNGHkNizuMHfdPBuUt as $EvXnDDllhaIeEfewZcMw => $GquJRmfACibcvjgCRAzP){
					$this->MskPjFSmEMwrHagCdRI($GquJRmfACibcvjgCRAzP.'.min.css','css');
				}
			}
		}
		else {			
			$this->FvFMhjHtzGpLVnRlPcFU(json_encode($this->UTNSWfWPUTUsVMzwcOkR));
            if(count($this->IVyyuFExuVTAAIxkyVuc) > 0){
                foreach($this->IVyyuFExuVTAAIxkyVuc as $EvXnDDllhaIeEfewZcMw => $nyZkmlAyBItZeRrwJRpk){
                    $this->MskPjFSmEMwrHagCdRI('jqplot.'.$nyZkmlAyBItZeRrwJRpk.'.min.js','plugins');
                }
            }

        }

		if($this->MvquysdCEAUDBKoKQGBG){
			echo '<link rel="stylesheet" type="text/css" href="'. $this->diemKSTGVuODqeyUitg .'css/debug.css" />';
			echo '<link rel="stylesheet" type="text/css" href="'. $this->diemKSTGVuODqeyUitg .'js/highlighter/styles/'. JS_HIGHLIGHT_CSS_STYLE .'.css" />';
			echo '<script src="'. $this->diemKSTGVuODqeyUitg .'js/highlighter/highlight.pack.js"></script>';
			echo '<script>hljs.initHighlightingOnLoad();</script>';
			echo '<script src="'. $this->diemKSTGVuODqeyUitg .'js/jquery-ui-1.8.16.custom.min.js"></script>';
			echo '<link rel="stylesheet" type="text/css" href="'. $this->diemKSTGVuODqeyUitg .'js/css/cupertino/jquery-ui-1.8.16.custom.css" />';
		}
		return true;
	}

	private function TbhGIFvEqMJUsVxpRDmq($cflRcUZoKJyHuhads,$cLIqbezSrNzFuESsTGFa){
		$eqaqBhfHVuLjpcJAUYQt = '<div id="bind_'.$this->DooYDsFhWAStPQyfpnNR.'"><span id="bind_span_label_'.$this->DooYDsFhWAStPQyfpnNR.'"></span><span id="bind_span_data_'.$this->DooYDsFhWAStPQyfpnNR.'"></span></div>';
		$phbMzMDDIThKgGxrqcKV = '<div id="'. $this->DooYDsFhWAStPQyfpnNR .'" class="plot jqplot-target" style="width:'.$cLIqbezSrNzFuESsTGFa.';height:'.$cflRcUZoKJyHuhads.';">';
		$phbMzMDDIThKgGxrqcKV .= '</div>' ."\n\n";
		
		echo $eqaqBhfHVuLjpcJAUYQt.$phbMzMDDIThKgGxrqcKV;
	}

	
	
	private function qbgUJSQtQXfBWKYujfK(){
		if($this->MvquysdCEAUDBKoKQGBG){
			echo "\n". '<h3 style="color:#2779AA;">Renderer plugins used:</h3>';
			echo "\n".'<pre><code>';
			print_r($this->IVyyuFExuVTAAIxkyVuc);
			echo '</code></pre>'."\n";
			echo '<br /><br /><br /><br /><hr size="1" />';
		}
		echo "\n". '<script '. (($this->MvquysdCEAUDBKoKQGBG)?'class="code" ':'') .' language="javascript" type="text/javascript"> ' ."\n";
		foreach($this->ZROwYyoANTHEldyoMGne as $iPKfsKALQfzPxLPDiWdN => $ZlpNyRjdXqDxyabaXwj){
			echo "var $ZlpNyRjdXqDxyabaXwj;". "\n";
		}
		echo "var ". $this->RuKUTgCuqnCHBGmsvCNM .";"."\n";
		echo '$(document).ready(function(){ ' ."\n";
	}


	private function NlVRgzhSrZvTzGKDnswE(){ $this->vlnqSmIyZLENCXDMBMfq = '';
		$this->XPKTDUjlXkDlcUtTmZnW = '';
		$this->AzzzwzQpbzlhEEHSA = '';
				
		foreach($this->AskutgoNaFDoDrjfLkaZ as $aKZYtEuscjGWcZXDnWk => $tlmiqxZkcxndgflgKpho){
			if($tlmiqxZkcxndgflgKpho == 'before') $this->vlnqSmIyZLENCXDMBMfq = $this->vlnqSmIyZLENCXDMBMfq."\n\n".$this->mIrhWJBOekpLSBCsSYgW[$aKZYtEuscjGWcZXDnWk]. "\n\n";
			else if($tlmiqxZkcxndgflgKpho == 'after') $this->XPKTDUjlXkDlcUtTmZnW = $this->XPKTDUjlXkDlcUtTmZnW."\n\n".$this->mIrhWJBOekpLSBCsSYgW[$aKZYtEuscjGWcZXDnWk]. "\n\n";
			else if($tlmiqxZkcxndgflgKpho == 'outside_jquery') $this->AzzzwzQpbzlhEEHSA = $this->AzzzwzQpbzlhEEHSA . "\n\n".$this->mIrhWJBOekpLSBCsSYgW[$aKZYtEuscjGWcZXDnWk]. "\n\n";
		}

		$qmHKzvhFAYgpzvBdYGwR = '';
		$qmHKzvhFAYgpzvBdYGwR .= "$.jqplot.config.enablePlugins = $this->fSDHJuvlZGlHFmZGkPqI;"."\n";
		$qmHKzvhFAYgpzvBdYGwR .= "$.jqplot.config.defaultHeight = $this->LFRUBjzOcVullKGcOhBk;"."\n";
		$qmHKzvhFAYgpzvBdYGwR .= "$.jqplot.config.defaultWidth  = $this->RBsMzzknNXLVUIbdPc;"."\n";

		$uhliyxYQNJAnQZWYEHgv = $this->get_config();
		if($uhliyxYQNJAnQZWYEHgv != NULL){
			foreach($uhliyxYQNJAnQZWYEHgv as $yMLKnafDRdfbwbfZhTZI => $TxBdPvmAQVCoLHGWVjCT){
				$qmHKzvhFAYgpzvBdYGwR .= "$.jqplot.config.$yMLKnafDRdfbwbfZhTZI = '$TxBdPvmAQVCoLHGWVjCT';"."\n";
			}
		}

		
		$XBgPMCUjuMMBZWNBynvb = '';
		foreach($this->ZROwYyoANTHEldyoMGne as $iPKfsKALQfzPxLPDiWdN => $ZlpNyRjdXqDxyabaXwj){
			$XBgPMCUjuMMBZWNBynvb .= "$ZlpNyRjdXqDxyabaXwj = ".json_encode($this->oXyaqmHoChvHQFCvTluq[$iPKfsKALQfzPxLPDiWdN]). ";". "\n";	
		}
				
		
		
		
        $HssRFhNQChdsFDwehNUe = json_encode($this->UTNSWfWPUTUsVMzwcOkR);
        $XBgPMCUjuMMBZWNBynvb .= $this->RuKUTgCuqnCHBGmsvCNM ." = ". preg_replace('/"js::([^"]*)"/i', '$1', ($this->MvquysdCEAUDBKoKQGBG)?C_Utility_pC::ANKuZuKHcgttsicUFzSo($HssRFhNQChdsFDwehNUe):$HssRFhNQChdsFDwehNUe)."\n";

        
		switch ($this->fOtFKvSutUcpIuNHZXPI){
			case 'extend':
				
				$XBgPMCUjuMMBZWNBynvb .= "\n".$this->vlnqSmIyZLENCXDMBMfq."\n"."\n".$qmHKzvhFAYgpzvBdYGwR.' _'.$this->DooYDsFhWAStPQyfpnNR.'= $.jqplot("'. $this->DooYDsFhWAStPQyfpnNR .'", '.
					json_encode($this->oXyaqmHoChvHQFCvTluq) .', '.
					' $.extend(true, {}, '.json_encode($this->YxtQJQlbqzMLMjuHvko) .', '.
					$this->RuKUTgCuqnCHBGmsvCNM .'));'."\n".$this->XPKTDUjlXkDlcUtTmZnW."\n";
				break;

			case 'json_data':
				$XBgPMCUjuMMBZWNBynvb .= "\n".$this->vlnqSmIyZLENCXDMBMfq."\n"."\n".$qmHKzvhFAYgpzvBdYGwR.' _'.$this->DooYDsFhWAStPQyfpnNR.'= $.jqplot("'. $this->DooYDsFhWAStPQyfpnNR .'", \''.
					$this->oXyaqmHoChvHQFCvTluq .'\', '.
					$this->RuKUTgCuqnCHBGmsvCNM .');'."\n".$this->XPKTDUjlXkDlcUtTmZnW."\n";
				break;

			case 'default':
			default :
				$XBgPMCUjuMMBZWNBynvb .= "\n".$this->vlnqSmIyZLENCXDMBMfq."\n"."\n".$qmHKzvhFAYgpzvBdYGwR.' _'.$this->DooYDsFhWAStPQyfpnNR.'= $.jqplot("'. $this->DooYDsFhWAStPQyfpnNR .'", '.
					json_encode($this->oXyaqmHoChvHQFCvTluq) .', '.
					$this->RuKUTgCuqnCHBGmsvCNM .');'."\n".$this->XPKTDUjlXkDlcUtTmZnW."\n";
				break;
		}

		
        echo $pJtfpEYbaVrCRCaxVfSf = $XBgPMCUjuMMBZWNBynvb .";_".$this->DooYDsFhWAStPQyfpnNR.".redraw();";
	}

	
	public function add_custom_js($kiDrLGWbhWlEhsQXFrwi,$HNXQhnWUmpmiJTwtNQmy='before'){
		$this->AskutgoNaFDoDrjfLkaZ[] = $HNXQhnWUmpmiJTwtNQmy;
		$this->mIrhWJBOekpLSBCsSYgW[] = $kiDrLGWbhWlEhsQXFrwi;
	}

		
	public function bind_js($tTXOxtgyeIgZevbLYuSP='', $SxQQaNRiofVqaInQEsMk = NULL,$JncCZMfQkDKaKIuzFrY='',$gRwtiPXzYwhJsZWjXOCM=''){

		if($tTXOxtgyeIgZevbLYuSP == 'custom'){
			echo "<script type='text/javascript'> $(document).ready(function (){ $SxQQaNRiofVqaInQEsMk });</script>";
			return;
		}
		$bYCVMhDxqNcrBAmcOXKO = '';
		if($SxQQaNRiofVqaInQEsMk != NULL) {
			if(!is_array($SxQQaNRiofVqaInQEsMk)) {
				echo 'Bind JS Error: event data supplied was not an array';
				return false;
			}
			$upldIItiOzgTCQDQAtSs = '';
			$pYaBvVeTXiaThPOJVY = 1;
			foreach ($SxQQaNRiofVqaInQEsMk as $piiJbwvzLxHvKjlNnFzd => $oKtoKdSxGvDLBySQNYGB){
				if(count($SxQQaNRiofVqaInQEsMk) <= 1){
					$bYCVMhDxqNcrBAmcOXKO = $oKtoKdSxGvDLBySQNYGB.'^ ';
					break;
				}
				if(!is_string($piiJbwvzLxHvKjlNnFzd)) $bYCVMhDxqNcrBAmcOXKO .= $oKtoKdSxGvDLBySQNYGB.': '.$oKtoKdSxGvDLBySQNYGB;
				else $bYCVMhDxqNcrBAmcOXKO .= $piiJbwvzLxHvKjlNnFzd.':^ +'.$oKtoKdSxGvDLBySQNYGB .'+^, ';
					
				if($pYaBvVeTXiaThPOJVY <=3)$upldIItiOzgTCQDQAtSs .= ','.$oKtoKdSxGvDLBySQNYGB;
				$pYaBvVeTXiaThPOJVY++;
			}
		}


		$kYpPOASjBZATbwHkKZiI = $this->DooYDsFhWAStPQyfpnNR;
		if($gRwtiPXzYwhJsZWjXOCM == '')$gRwtiPXzYwhJsZWjXOCM= 'bind_span_data_'.$this->DooYDsFhWAStPQyfpnNR;
		if($JncCZMfQkDKaKIuzFrY == '') $JncCZMfQkDKaKIuzFrY = '&nbsp;';            

		if(count($SxQQaNRiofVqaInQEsMk) > 1) $bYCVMhDxqNcrBAmcOXKO = str_replace("^","'",'^'.substr($bYCVMhDxqNcrBAmcOXKO, 0,-4));
		else $bYCVMhDxqNcrBAmcOXKO = str_replace("^","'",'^'.substr($bYCVMhDxqNcrBAmcOXKO, 0,-1));

		$hgXukzBLSjFKOdEaNgri = "$(document).ready(function(){ ". "\n". 
			"$('#bind_span_label_$kYpPOASjBZATbwHkKZiI').html('$JncCZMfQkDKaKIuzFrY'); ". "\n". 
				"$('#$kYpPOASjBZATbwHkKZiI').bind('$tTXOxtgyeIgZevbLYuSP',
					function (ev$upldIItiOzgTCQDQAtSs){
						$('#$gRwtiPXzYwhJsZWjXOCM').html($bYCVMhDxqNcrBAmcOXKO);
					}
				); });"."\n";


		
		echo "<script type='text/javascript'>"."\n". $hgXukzBLSjFKOdEaNgri ."\n". "</script>"."\n";

	}



    private function aCqasivsrnOuhyrITOcv(){
        echo "\n". '});' ."\n";
        echo $this->AzzzwzQpbzlhEEHSA;
        echo '</script>' ."\n";
        if($this->MvquysdCEAUDBKoKQGBG) echo '<script type="text/javascript" src="'.  $this->diemKSTGVuODqeyUitg .'js/showjs.js"></script>' ."\n"."\n";
        echo '<div style="clear:both;">&nbsp;</div>';
    }


	public function init(){}
	public function SOraMaTziDrxHwAlvTpD(){}				
	public function wmpyydRydaZEBjOMXWVy(){}				
	public function aHABCIOnnosqUIkJCGgX(){}				
	public function DspZQgqojGzDMhIQWyVj(){}						
	public function hAZTgvODQMFpJagfKljQ(){}												
	public function sAdcrFBAhTBvKzrXtGEB(){}					
	public function GcJTpRpKNLRvqJjTQE(){}			
	public function HdfGVMaLKTJxHCCrln(){}			
	public function restorePreviousSeriesOrder(){}
	public function restoreOriginalSeriesOrder(){}
		
	
	public function draw($cLIqbezSrNzFuESsTGFa=600,$cflRcUZoKJyHuhads=400,$BUnAFCRJPZvoJggPCVns=array(),$jiqPIBgnPFhaKexGZOZv=true){
		$cflRcUZoKJyHuhads = $cflRcUZoKJyHuhads.'px';
		$cLIqbezSrNzFuESsTGFa  = $cLIqbezSrNzFuESsTGFa.'px';
		$this->BUnAFCRJPZvoJggPCVns = $BUnAFCRJPZvoJggPCVns;
		$this->jqplot_show_plugins($this->IVyyuFExuVTAAIxkyVuc);                    
		$this->FOrOQWClpPJIQdeIwuJx();
			
		$this->display_script_includeonce();

		ob_start();

		$this->TbhGIFvEqMJUsVxpRDmq($cflRcUZoKJyHuhads,$cLIqbezSrNzFuESsTGFa);
		$this->qbgUJSQtQXfBWKYujfK();
		$this->NlVRgzhSrZvTzGKDnswE();
		$this->aCqasivsrnOuhyrITOcv();

		$this->LpTqAMfxBKGsvcjtGcaw = ob_get_contents();		
		$this->LpTqAMfxBKGsvcjtGcaw = preg_replace('/,\s*}/', '}', $this->LpTqAMfxBKGsvcjtGcaw);	

		ob_end_clean();			

		if($jiqPIBgnPFhaKexGZOZv){
			echo $this->LpTqAMfxBKGsvcjtGcaw;
		}
		echo 
			"<script type='text/javascript'><!--
			document.write(unescape('%3c%64%69%76%20%63%6c%61%73%73%3d%22%70%67%5f%6e%6f%74%69%66%79%22%20%73%74%79%6c%65%3d%22%66%6f%6e%74%2d%73%69%7a%65%3a%38%70%74%3b%63%6f%6c%6f%72%3a%67%72%61%79%3b%66%6f%6e%74%2d%66%61%6d%69%6c%79%3a%61%72%69%61%6c%3b%22%3e%0d%0a%20%20%20%20%20%20%20%20%09%09%59%6f%75%20%61%72%65%20%75%73%69%6e%67%20%70%68%70%43%68%61%72%74%20%4c%69%74%65%2e%20%3c%61%20%68%72%65%66%3d%22%68%74%74%70%3a%2f%2f%70%68%70%63%68%61%72%74%2e%63%6f%6d%2f%64%6f%77%6e%6c%6f%61%64%2f%3f%72%65%66%3d%6c%69%74%65%5f%6e%61%67%23%63%6f%6d%70%61%72%69%73%6f%6e%22%3e%70%68%70%43%68%61%72%74%20%66%75%6c%6c%20%76%65%72%73%69%6f%6e%3c%2f%61%3e%20%77%69%6c%6c%20%6e%6f%74%20%68%61%76%65%20%77%61%74%65%72%6d%61%72%6b%20%61%6e%64%20%73%75%70%70%6f%72%74%20%6d%75%63%68%20%6d%6f%72%65%20%3c%61%20%68%72%65%66%3d%22%68%74%74%70%3a%2f%2f%70%68%70%63%68%61%72%74%2e%63%6f%6d%2f%65%78%61%6d%70%6c%65%73%2f%63%68%61%6e%67%65%2d%72%65%6e%64%65%72%65%72%2d%74%79%70%65%2f%22%3e%72%65%6e%64%65%72%65%72%20%74%79%70%65%73%3c%2f%61%3e%2e%0d%0a%20%20%20%20%09%09%3c%2f%64%69%76%3e'));";
		echo 'var _0x35b2=["\x5F\x5F\x63\x68\x61\x72\x74\x31","\x67\x65\x74\x45\x6C\x65\x6D\x65\x6E\x74\x42\x79\x49\x64","\x66\x69\x72\x73\x74","\x23\x5F\x5F\x63\x68\x61\x72\x74\x31\x20\x3E\x20\x63\x61\x6E\x76\x61\x73","\x63\x61\x6E\x76\x61\x73","\x63\x72\x65\x61\x74\x65\x45\x6C\x65\x6D\x65\x6E\x74","\x77\x69\x64\x74\x68","\x68\x65\x69\x67\x68\x74","\x73\x74\x79\x6C\x65","\x70\x6F\x73\x69\x74\x69\x6F\x6E\x3A\x61\x62\x73\x6F\x6C\x75\x74\x65\x3B\x7A\x2D\x69\x6E\x64\x65\x78\x3A\x39\x39\x39\x39","\x73\x65\x74\x41\x74\x74\x72\x69\x62\x75\x74\x65","\x66\x69\x72\x73\x74\x43\x68\x69\x6C\x64","\x69\x6E\x73\x65\x72\x74\x42\x65\x66\x6F\x72\x65","\x61\x70\x70\x65\x6E\x64\x43\x68\x69\x6C\x64","\x32\x64","\x67\x65\x74\x43\x6F\x6E\x74\x65\x78\x74","\x67\x6C\x6F\x62\x61\x6C\x41\x6C\x70\x68\x61","\x66\x6F\x6E\x74","\x35\x30\x70\x78\x20\x61\x72\x69\x61\x6C","\x66\x69\x6C\x6C\x53\x74\x79\x6C\x65","\x6C\x69\x67\x68\x74\x67\x72\x61\x79","\x70\x68\x70\x43\x68\x61\x72\x74\x20\x4C\x69\x74\x65","\x6D\x65\x61\x73\x75\x72\x65\x54\x65\x78\x74","\x74\x72\x61\x6E\x73\x6C\x61\x74\x65","\x61\x74\x61\x6E","\x72\x6F\x74\x61\x74\x65","\x66\x69\x6C\x6C\x54\x65\x78\x74","\x72\x65\x61\x64\x79"];jQuery(document)[_0x35b2[27]](function(_0x4851x1){var _0x4851x2=document[_0x35b2[1]](_0x35b2[0]);var _0x4851x3=_0x4851x1(_0x35b2[3])[_0x35b2[2]]();var _0x4851x4=document[_0x35b2[5]](_0x35b2[4]);_0x4851x4[_0x35b2[6]]=_0x4851x3[_0x35b2[6]]();_0x4851x4[_0x35b2[7]]=_0x4851x3[_0x35b2[7]]();_0x4851x4[_0x35b2[10]](_0x35b2[8],_0x35b2[9]);if(_0x4851x2[_0x35b2[11]]){_0x4851x2[_0x35b2[12]](_0x4851x4,_0x4851x2[_0x35b2[11]])}else {_0x4851x2[_0x35b2[13]](_0x4851x4)};var _0x4851x5=_0x4851x4[_0x35b2[15]](_0x35b2[14]);_0x4851x5[_0x35b2[16]]=0.4;_0x4851x5[_0x35b2[17]]=_0x35b2[18];_0x4851x5[_0x35b2[19]]=_0x35b2[20];var _0x4851x6=_0x4851x5[_0x35b2[22]](_0x35b2[21]);var _0x4851x7=_0x4851x6[_0x35b2[6]];var _0x4851x8=72;_0x4851x5[_0x35b2[23]](_0x4851x3[_0x35b2[6]]()/2,_0x4851x3[_0x35b2[7]]()/2);_0x4851x5[_0x35b2[25]](-Math[_0x35b2[24]](_0x4851x3[_0x35b2[7]]()/_0x4851x3[_0x35b2[6]]()));_0x4851x5[_0x35b2[26]](_0x35b2[21],-_0x4851x7/2,_0x4851x8/2);});			//--></script>';
	}

		
	public function get_display($guNWXZzaXYNzWJprPxI=true){
		if($guNWXZzaXYNzWJprPxI){
			return $this->yFaaZTothPRfJPvCtExA . $this->LpTqAMfxBKGsvcjtGcaw;
		}else{
			return $this->LpTqAMfxBKGsvcjtGcaw;
		}
	}
}
?>

').'<?php '); ?>